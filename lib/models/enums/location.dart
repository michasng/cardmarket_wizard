enum Location {
  austria(
    'AT',
    'Austria',
  ),
  belgium(
    'BE',
    'Belgium',
  ),
  bulgaria(
    'BG',
    'Bulgaria',
  ),
  croatia(
    'HR',
    'Croatia',
  ),
  cyprus(
    'CY',
    'Cyprus',
  ),
  czechRepublic('CZ', 'Czech Republic'),
  denmark(
    'DK',
    'Denmark',
  ),
  estonia(
    'EE',
    'Estonia',
  ),
  finland(
    'FI',
    'Finland',
  ),
  france(
    'FR',
    'France',
  ),
  germany(
    'D',
    'Germany',
  ),
  greece(
    'GR',
    'Greece',
  ),
  hungary(
    'HU',
    'Hungary',
  ),
  iceland(
    'IS',
    'Iceland',
  ),
  ireland(
    'IE',
    'Ireland',
  ),
  italy(
    'IT',
    'Italy',
  ),
  latvia(
    'LV',
    'Latvia',
  ),
  liechtenstein(
    'LI',
    'Liechtenstein',
  ),
  lithuania(
    'LT',
    'Lithuania',
  ),
  luxembourg(
    'LU',
    'Luxembourg',
  ),
  malta(
    'MT',
    'Malta',
  ),
  netherlands(
    'NL',
    'Netherlands',
  ),
  norway(
    'NO',
    'Norway',
  ),
  poland(
    'PL',
    'Poland',
  ),
  portugal(
    'PT',
    'Portugal',
  ),
  romania(
    'RO',
    'Romania',
  ),
  slovakia(
    'SK',
    'Slovakia',
  ),
  slovenia(
    'SI',
    'Slovenia',
  ),
  spain(
    'ES',
    'Spain',
  ),
  sweden(
    'SE',
    'Sweden',
  ),
  switzerland(
    'CH',
    'Switzerland',
  ),
  unitedKingdom('GB', 'United Kingdom');

  final String countryCode;
  final String label;

  const Location(this.countryCode, this.label);

  factory Location.byLabel(String label) {
    return values.firstWhere((value) => value.label == label);
  }
}
